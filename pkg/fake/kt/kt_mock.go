// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/kt/types.go

// Package kt is a generated GoMock package.
package kt

import (
	reflect "reflect"

	cluster "github.com/alibaba/kt-connect/pkg/kt/cluster"
	connect "github.com/alibaba/kt-connect/pkg/kt/connect"
	exec "github.com/alibaba/kt-connect/pkg/kt/exec"
	gomock "github.com/golang/mock/gomock"
)

// MockCliInterface is a mock of CliInterface interface
type MockCliInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCliInterfaceMockRecorder
}

// MockCliInterfaceMockRecorder is the mock recorder for MockCliInterface
type MockCliInterfaceMockRecorder struct {
	mock *MockCliInterface
}

// NewMockCliInterface creates a new mock instance
func NewMockCliInterface(ctrl *gomock.Controller) *MockCliInterface {
	mock := &MockCliInterface{ctrl: ctrl}
	mock.recorder = &MockCliInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCliInterface) EXPECT() *MockCliInterfaceMockRecorder {
	return m.recorder
}

// KubernetesInterface mocks base method
func (m *MockCliInterface) KubernetesInterface() cluster.KubernetesInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "KubernetesInterface")
	ret0, _ := ret[0].(cluster.KubernetesInterface)
	return ret0
}

// KubernetesInterface indicates an expected call of KubernetesInterface
func (mr *MockCliInterfaceMockRecorder) KubernetesInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "KubernetesInterface", reflect.TypeOf((*MockCliInterface)(nil).KubernetesInterface))
}

// ShadowInterface mocks base method
func (m *MockCliInterface) ShadowInterface() connect.ShadowInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShadowInterface")
	ret0, _ := ret[0].(connect.ShadowInterface)
	return ret0
}

// ShadowInterface indicates an expected call of ShadowInterface
func (mr *MockCliInterfaceMockRecorder) ShadowInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShadowInterface", reflect.TypeOf((*MockCliInterface)(nil).ShadowInterface))
}

// ExecInterface mocks base method
func (m *MockCliInterface) ExecInterface() exec.CliInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecInterface")
	ret0, _ := ret[0].(exec.CliInterface)
	return ret0
}

// ExecInterface indicates an expected call of ExecInterface
func (mr *MockCliInterfaceMockRecorder) ExecInterface() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecInterface", reflect.TypeOf((*MockCliInterface)(nil).ExecInterface))
}
